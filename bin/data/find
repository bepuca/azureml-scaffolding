#!/usr/bin/env bash
#? Find account, container and subdir for a named data asset

set -eo pipefail
cd "$(dirname "$0")/../.."

function usage {
    cat<<EOF
Find account, container and subdir for a named data asset

Usage: $0 NAME VERSION

Arguments:
  NAME  Name of the data asset to find.
  VERSION  Version of the data asset to find.

Outputs <storage_account> <container> <subdir> to stdout.
<subdir> is returned as an anchored regex pattern to be consumed by download.
EOF
}

while :; do
    case $1 in
        -h|--help) usage; exit ;;
        *) break ;;
    esac
    shift
done

if [[ $# -ne 2 ]]; then
    echo>&2 "Exactly 2 arguments expected, but $# supplied."
    usage >&2
    exit 1
fi

name=$1
version=$2

source bin/env container.env
bin/chkenv AZUREML_WORKSPACE AZUREML_RESOURCE_GROUP

dataset_path="$(az ml data show --name "$name" \
    --version "$version" \
    --workspace-name "$AZUREML_WORKSPACE" \
    --resource-group "$AZUREML_RESOURCE_GROUP" \
    --query "path" --output tsv)"
# URI is of the form: .../datastores/<datastore_name>/paths/<dataset_subfolder>
datastore_path="${dataset_path#*datastores/}" # Remove everything before "datastores"
datastore="${datastore_path%%/paths*}"        # Remove everything after "paths"
dataset_subdir="${datastore_path#*paths/}"    # Keep everything after "paths"

{
    read -r container
    read -r account
} < <( az ml datastore show --name "$datastore" \
    --workspace-name "$AZUREML_WORKSPACE" \
    --resource-group "$AZUREML_RESOURCE_GROUP" \
    --query "[container_name, account_name]" \
    --output tsv
)

# dataset_subdir as anchored regex pattern to be consumed by download
echo "$account" "$container" "^$dataset_subdir"
