#!/usr/bin/env bash
#? [Pipeline] Execute package locally as it would in AzureML

set -eo pipefail
cd "$(dirname "$0")/../.."

function usage {
    cat<<EOF
Execute package locally as it would in AzureML

Usage: $0 PACKAGE

Options:
    -h, --help         Show this help message and exit.

Arguments:
  PACKAGE  Directory of the package relative to "$PKGS_PATH".

This script ensures the package is isolated with the minimum artifacts and
is executed locally as it would be in AzureML. The execution is driven by the
usual package entrypoint '__main__.py'. It is the responsibility of the
user to define the entrypoint so it does not require command line arguments but
executes an equivalent payload of what is expected in AzureML.
EOF
}

bin/chkenv "PKGS_PATH"

while :; do
    case $1 in
        -h|--help) usage; exit ;;
        *) break ;;
    esac
    shift
done

if [ $# -eq 0 ]; then
    echo>&2 "Package not provided."
    usage
    exit 1
fi
pipeline=$1

source bin/lib.sh  # import: prep_run, run_local
read -r _ run_dir <<< "$(prep_run "$pipeline")"
packages="$(bin/pipe/iso "$pipeline" "$run_dir")"

while read -r package; do
    pushd "$run_dir/$package/src" > /dev/null
    run_local "$package"
    popd > /dev/null
done <<< "$packages"
