#!/usr/bin/env bash
#? Run an experiment as a job in AzureML

set -eo pipefail
cd "$(dirname "$0")/../.."

source bin/env container.env

function usage {
    cat<<EOF
Run an experiment in AzureML

Usage: $0 [options] EXPERIMENT

Options:
    -h, --help         Show this help message and exit.
    --job-xargs XARGS  Additional arguments to pass to the job create command.
                       See "az ml job create --help" for more information.
    --file, -f  FILE   Filepath name for the job configuration YAML inside EXPERIMENT.
                       Default: "azure-ml-job.yaml"

Arguments:
  EXPERIMENT  Directory of the experiment relative to "$CODE_PATH"

The script ensures the experiment is packaged with the minimum artifacts and is
submitted to AzureML with the matching name.
EOF
}

file="azure-ml-job.yaml"
while :; do
    case $1 in
        -h|--help) usage; exit ;;
        --job-xargs)
            if [[ -z "$2" ]]; then
                echo>&2 "Missing value for --job-xargs."
                usage >&2
                exit 1
            fi
            xargs=$2
            shift
            ;;
        -f|--file)
            if [[ -z "$2" ]]; then
                echo>&2 "Missing value for --file."
                usage >&2
                exit 1
            fi
            file=$2
            shift
            ;;
        *) break ;;
    esac
    shift
done

if [ $# -eq 0 ]; then
    echo>&2 "Experiment not provided."
    usage
    exit 1
fi
experiment=$1

source bin/env container.env
bin/chkenv AZURE_ML_WORKSPACE RESOURCE_GROUP

run_name=$(bin/exp/name)
# add timestamp locally so runs are sorted chronologically
local_run_name="$(date +%s)_$run_name"
run_dir=$(bin/exp/pkg "$experiment" "$local_run_name")

az ml job create -f "$run_dir/$file" \
	--resource-group "$RESOURCE_GROUP" --workspace-name "$AZURE_ML_WORKSPACE" \
    --set name="$run_name" \
	$xargs
